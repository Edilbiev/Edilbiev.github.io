{"version":3,"sources":["Square.js","Board.js","App.js","index.js"],"names":["Square","item","open","className","isOpened","onClick","id","Board","items","restart","squares","map","counter","filter","length","App","squaresBase","useState","setItems","ReactDOM","render","document","getElementById"],"mappings":"0JAQeA,MANf,YAA8B,IAAbC,EAAY,EAAZA,KAAMC,EAAM,EAANA,KACnB,OACI,yBAAKC,UAAWF,EAAKG,SAAU,SAAW,QAASC,QAAS,kBAAIH,EAAKD,EAAKK,QCuBnEC,MAvBf,YAAuC,IAAvBC,EAAsB,EAAtBA,MAAON,EAAe,EAAfA,KAAMO,EAAS,EAATA,QAEnBC,EAAUF,EAAMG,KAAI,SAAAV,GACtB,OAAO,kBAAC,EAAD,CAAQA,KAAMA,EAAMC,KAAMA,OAG/BU,EAAUJ,EAAMK,QAAO,SAAAZ,GAAI,OAAKA,EAAKG,YAE3C,OACI,6BACI,yBAAKD,UAAU,SACVO,GAEL,yBAAKP,UAAU,WAAf,gGACuBS,EAAQE,QAE/B,yBAAKX,UAA8B,IAAnBS,EAAQE,OAAc,OAAS,QAC3C,4BAAQX,UAAU,UAAUE,QAASI,GAArC,gFCoBDM,MAtCf,WACI,IAAMC,EAAc,CAChB,CAACV,GAAK,EAAGF,UAAU,GACnB,CAACE,GAAK,EAAGF,UAAU,GACnB,CAACE,GAAK,EAAGF,UAAU,GACnB,CAACE,GAAK,EAAGF,UAAU,GACnB,CAACE,GAAK,EAAGF,UAAU,GACnB,CAACE,GAAK,EAAGF,UAAU,GACnB,CAACE,GAAK,EAAGF,UAAU,GACnB,CAACE,GAAK,EAAGF,UAAU,GACnB,CAACE,GAAK,EAAGF,UAAU,IAVb,EAagBa,mBAASD,GAbzB,mBAaHR,EAbG,KAaIU,EAbJ,KA+BV,OACI,yBAAKf,UAAU,QACX,kBAAC,EAAD,CAAOK,MAAOA,EAAON,KAlBhB,SAAAI,GACTY,EAASV,EAAMG,KAAI,SAAAV,GACf,OAAGK,IAAOL,EAAKK,GACJ,2BACAL,GADP,IAEIG,UAAU,IAGXH,OAU0BQ,QANzB,WACZS,EAASF,QC1BjBG,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.32eb7a6f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Square({item, open}){\r\n    return(\r\n        <div className={item.isOpened? \"filled\" : \"empty\"} onClick={()=>open(item.id)}></div>\r\n    )\r\n}\r\n\r\nexport default Square;","import React from \"react\";\r\nimport Square from \"./Square\"\r\n\r\n\r\nfunction Board({items, open, restart}){\r\n\r\n    const squares = items.map(item => {\r\n        return <Square item={item} open={open}/>\r\n    })\r\n\r\n    const counter = items.filter(item => !item.isOpened)\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"board\">\r\n                {squares}\r\n            </div>\r\n            <div className=\"counter\">\r\n                осталось открыть: {counter.length}\r\n            </div>\r\n            <div className={counter.length === 0? \"show\" : \"hide\"}>\r\n                <button className=\"restart\" onClick={restart}>Начать заново</button>\r\n            </div>\r\n        </div>       \r\n    )\r\n}\r\n\r\nexport default Board;","import React, { useState } from \"react\";\r\nimport Board from \"./Board\";\r\n\r\nfunction App(){\r\n    const squaresBase = [\r\n        {id : 1, isOpened: false},\r\n        {id : 2, isOpened: false},\r\n        {id : 3, isOpened: false},\r\n        {id : 4, isOpened: false},\r\n        {id : 5, isOpened: false},\r\n        {id : 6, isOpened: false},\r\n        {id : 7, isOpened: false},\r\n        {id : 8, isOpened: false},\r\n        {id : 9, isOpened: false},\r\n    ];\r\n\r\n    const [items, setItems] = useState(squaresBase);\r\n\r\n    const open = id => {\r\n        setItems(items.map(item =>{\r\n            if(id === item.id){\r\n                return {\r\n                    ...item,\r\n                    isOpened: true\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n\r\n    const restart = () => {\r\n        setItems(squaresBase)\r\n    }\r\n\r\n    return(\r\n        <div className=\"body\">\r\n            <Board items={items} open={open} restart={restart}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}