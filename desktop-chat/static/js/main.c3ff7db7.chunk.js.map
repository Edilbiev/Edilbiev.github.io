{"version":3,"sources":["components/common/GitHub/iconmonstr-github-1.svg","utils/dom.js","api/api.js","redux/actions.js","components/sidebar/ContactSearch.js","components/common/skeletons/RecentChatsSkeleton.js","components/common/skeletons/SkeletonList.js","components/common/OnlineIndicator.js","components/common/Avatar.js","components/common/dropdown/Dropdown.js","components/common/dropdown/DropdownItem.js","components/sidebar/DropdownMenu.js","components/sidebar/Contact.js","components/sidebar/Contacts.js","components/sidebar/Sidebar.js","components/chat/MessageSearch.js","components/chat/ChatHeader.js","components/chat/InfoMessage.js","components/chat/MessageDropdown.js","components/chat/TextMessage.js","components/chat/Message.js","components/chat/Chat.js","components/chat/MessageSendButtons.js","components/chat/MessageInput.js","components/chat/ChatWindow.js","components/profile/ContactInfo.js","components/profile/Social.js","components/profile/Media.js","components/profile/ProfileBar.js","components/common/GitHub/GitHub.js","components/App.js","redux/reducers/contacts.js","redux/reducers/chat.js","redux/reducers/profile.js","redux/reducers/application.js","redux/index.js","index.js"],"names":["module","exports","scrollChatToBottom","chatWindow","document","getElementById","scrollTop","scrollHeight","fetchRequest","path","method","params","fetch","headers","Accept","body","JSON","stringify","then","res","json","get","messageSentBegin","messageObject","nextTempId","type","payload","messageDeleted","id","dispatch","ContactSearch","useDispatch","loading","useSelector","state","contacts","searchString","application","contactSearchString","className","disabled","placeholder","value","onChange","event","target","RecentChatSkeleton","count","circle","width","height","SkeletonList","Array","fill","map","_","index","lines","key","OnlineIndicator","customClass","Avatar","label","online","size","onclick","onClick","defaultProps","Dropdown","open","children","DropdownItem","action","DropdownMenu","useState","dropdown","setDropdown","stopPropagation","Contact","fullname","lastMessage","_id","opened","useParams","showDots","setShowDots","history","useHistory","readIcon","read","dayjs","extend","Calendar","lastMessageString","time","calendar","sameDay","lastDay","lastWeek","sameElse","push","onMouseEnter","onMouseLeave","fromUserId","content","length","substring","Contacts","itemsSortedByTime","items","filter","toUpperCase","indexOf","sort","a","b","item","Sidebar","MessageSearch","isMessageSearchStringOpened","messageSearchString","ChatHeader","chat","contactInfo","find","handleShowSettings","useHotkeys","preventDefault","InfoMessage","text","MessageDropdown","messageId","TextMessage","isInbox","message","showArrow","setShowArrow","format","sending","Message","myId","profile","toUserId","Chat","MessageSendButtons","isTyping","handleClick","CSSTransition","in","timeout","classNames","MessageInput","setMessage","sendMessage","contactId","getState","onKeyDown","keyCode","ChatWindow","useEffect","chatLoaded","ContactInfo","username","Social","hasOwnProperty","socials","instagram","aria-hidden","twitter","facebook","Media","ProfileBar","undefined","GitHub","href","src","logo","alt","App","loading2","settingsBarOpened","updateLocale","weekdays","unmountOnExit","initialState","deleting","reducer","combineReducers","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render"],"mappings":"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","file":"static/js/main.c3ff7db7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iconmonstr-github-1.1bb02710.svg\";","export function scrollChatToBottom() {\n  const chatWindow = document.getElementById(\"chat-window\");\n  chatWindow.scrollTop = chatWindow.scrollHeight;\n}\n","export function fetchRequest(path, method, params) {\n  const ip = \"https://api.intocode.ru:8001/api\";\n  return fetch(ip + path, {\n    method,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n\n    body: JSON.stringify(params),\n  }).then((res) => res.json());\n}\n\nexport function post(path, params) {\n  return fetchRequest(path, \"POST\", params);\n}\n\nexport function del(path, params) {\n  return fetchRequest(path, \"DELETE\", params);\n}\n\nexport function get(path, params) {\n  return fetchRequest(path, \"GET\", params);\n}\n","import { scrollChatToBottom } from \"../utils/dom\";\nimport { del, get, post } from \"../api/api\";\n\nexport function profileLoaded() {\n  return (dispatch) => {\n    dispatch({ type: \"profile/load/started\" });\n\n    get(\"/profile\").then((json) => {\n      dispatch({\n        type: \"profile/load/succeed\",\n        payload: json,\n      });\n    });\n  };\n}\n\nexport function contactsLoaded() {\n  return (dispatch) => {\n    dispatch({ type: \"contacts/load/started\" });\n\n    get(\"/contacts\").then((json) => {\n      dispatch({\n        type: \"contacts/load/success\",\n        payload: json,\n      });\n    });\n  };\n}\n\nexport function chatLoaded(myId, contactId) {\n  return (dispatch) => {\n    dispatch({\n      type: \"chat/load/started\",\n      payload: contactId,\n    });\n\n    get(`/messages/${myId}/${contactId}`).then((json) => {\n      dispatch({\n        type: \"chat/load/success\",\n        payload: json,\n      });\n\n      scrollChatToBottom();\n    });\n  };\n}\n\nfunction messageSentBegin(messageObject, nextTempId) {\n  return {\n    type: \"message/send/started\",\n    payload: {\n      ...messageObject,\n      nextTempId,\n    },\n  };\n}\n\nexport function messageSent(messageObject) {\n  return async (dispatch, getState) => {\n    const { nextTempId } = getState().chat;\n\n    await dispatch(messageSentBegin(messageObject, nextTempId));\n\n    scrollChatToBottom();\n\n    post(\"/messages\", messageObject).then((json) => {\n      dispatch({\n        type: \"message/send/succeed\",\n        payload: {\n          ...json,\n          nextTempId,\n        },\n      });\n    });\n  };\n}\n\nexport function messageDeleted(id) {\n  return (dispatch) => {\n    dispatch({\n      type: \"message/delete/started\",\n    });\n\n    del(\"/messages\", id).then((json) => {\n      dispatch({\n        type: \"message/delete/succeed\",\n        payload: json,\n      });\n    });\n  };\n}\n\nexport function contactSearchStringSet(value) {\n  return {\n    type: \"contacts/search/set\",\n    payload: value,\n  };\n}\n\nexport function messageSearchStringHandled() {\n  return {\n    type: \"message/search/handled\",\n  };\n}\n\nexport function messageSearchStringClosed() {\n  return {\n    type: \"message/search/closed\",\n  };\n}\n\nexport function messageSearchStringCleared() {\n  return {\n    type: \"message/search/cleared\",\n  };\n}\n\nexport function messageSearchStringSet(value) {\n  return {\n    type: \"message/search/set\",\n    payload: value,\n  };\n}\n\nexport function settingsBarHandled() {\n  return { type: \"settings/bar/handled\" };\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { contactSearchStringSet } from \"../../redux/actions\";\n\nfunction ContactSearch() {\n  const dispatch = useDispatch();\n\n  const loading = useSelector((state) => state.contacts.loading);\n\n  const searchString = useSelector(\n    (state) => state.application.contactSearchString\n  );\n\n  const handleChange = (event) => {\n    dispatch(contactSearchStringSet(event.target.value));\n  };\n\n  return (\n    <div className={loading ? \"search-contact-disabled\" : \"search-contact\"}>\n      <div className=\"search-contact-icon\">\n        <i className=\"material-icons\">search</i>\n      </div>\n      <div>\n        <input\n          disabled={loading}\n          placeholder=\"Search contact\"\n          value={searchString}\n          onChange={handleChange}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ContactSearch;\n","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\n\nfunction RecentChatSkeleton() {\n  return (\n    <div className=\"recent-chat-skeleton\">\n      <div className=\"recent-chat-skeleton-circles\">\n        <Skeleton count={1} circle={true} width={35} height={35} />\n      </div>\n      <div className=\"recent-chat-skeleton-lines\">\n        <Skeleton count={1} height={16} />\n        <Skeleton count={1} height={13} />\n      </div>\n    </div>\n  );\n}\n\nexport default RecentChatSkeleton;\n","import React from \"react\";\nimport RecentChatSkeleton from \"./RecentChatsSkeleton\";\n\nfunction SkeletonList() {\n  const skeletonList = Array(20).fill(1);\n\n  return skeletonList.map((_, index) => (\n    <RecentChatSkeleton lines={20} key={index} />\n  ));\n}\n\nexport default SkeletonList;\n","import React from \"react\";\n\nfunction OnlineIndicator({ customClass }) {\n  return <div className={customClass} />;\n}\n\nexport default OnlineIndicator;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport OnlineIndicator from \"./OnlineIndicator\";\n\nfunction Avatar({ label, online, size, onclick }) {\n  return (\n    <div className={`avatar-size-${size}`} onClick={onclick}>\n      {online && <OnlineIndicator customClass=\"online-indicator-contact\" />}\n      {label}\n    </div>\n  );\n}\n\nAvatar.propTypes = {\n  size: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  online: PropTypes.bool.isRequired,\n};\n\nAvatar.defaultProps = {\n  size: \"medium\",\n  online: false,\n};\n\nexport default Avatar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Dropdown({ open, children, type }) {\n  if (open === false) {\n    return null;\n  }\n\n  return <div className={`${type}-dropdown`}>{children}</div>;\n}\n\nDropdown.propTypes = {\n  type: PropTypes.string.isRequired,\n  open: PropTypes.bool.isRequired,\n};\n\nDropdown.defaultProps = {\n  type: \"contact\",\n};\n\nexport default Dropdown;\n","import React from \"react\";\n\nfunction DropdownItem({ children, action }) {\n  return (\n    <div className=\"dropdown-item\" onClick={action}>\n      {children}\n    </div>\n  );\n}\n\nexport default DropdownItem;\n","import React, { useState } from \"react\";\nimport Dropdown from \"../common/dropdown/Dropdown\";\nimport DropdownItem from \"../common/dropdown/DropdownItem\";\n\nfunction DropdownMenu() {\n  const [dropdown, setDropdown] = useState(false);\n\n  const handleClick = (event) => {\n    event.stopPropagation();\n    setDropdown(!dropdown);\n  };\n\n  return (\n    <div className=\"dropdown-menu\">\n      <button className=\"dots\" onClick={handleClick}>\n        <i className=\"material-icons\">more_horiz</i>\n      </button>\n      <Dropdown open={dropdown}>\n        <DropdownItem>Delete</DropdownItem>\n        <DropdownItem>Archive</DropdownItem>\n        <DropdownItem>Edit</DropdownItem>\n      </Dropdown>\n    </div>\n  );\n}\n\nexport default DropdownMenu;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { messageSearchStringClosed } from \"../../redux/actions\";\nimport Avatar from \"../common/Avatar\";\nimport DropdownMenu from \"./DropdownMenu\";\nimport dayjs from \"dayjs\";\nimport Calendar from \"dayjs/plugin/calendar\";\n\nfunction Contact({ fullname, lastMessage, _id, online }) {\n  const opened = useParams().id;\n  const dispatch = useDispatch();\n\n  const [showDots, setShowDots] = useState(false);\n\n  const history = useHistory();\n\n  const handleClick = () => {\n    if (_id !== opened) {\n      dispatch(messageSearchStringClosed());\n      history.push(_id);\n    }\n  };\n\n  const handleMouseEnter = () => {\n    setShowDots(true);\n  };\n\n  const handleMouseLeave = () => {\n    setShowDots(false);\n  };\n\n  const readIcon =\n    lastMessage && lastMessage.read ? (\n      <i className=\"material-icons\">done_all</i>\n    ) : (\n      <i className=\"material-icons\">done</i>\n    );\n\n  dayjs.extend(Calendar);\n  const lastMessageString = lastMessage\n    ? dayjs(lastMessage.time).calendar(null, {\n      sameDay: \"HH:mm\",\n      lastDay: \"[Вчера]\",\n      lastWeek: \"dddd\",\n      sameElse: \"DD.MM.YY\",\n    })\n    : null;\n\n  return (\n    <div\n      className={_id === opened ? \"chats-item-opened\" : \"chats-item\"}\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <Avatar online={online} label={fullname[0]} />\n      <div className=\"chat-item-center\">\n        <div>{fullname}</div>\n        {lastMessage && (\n          <div className=\"last-message\">\n            {lastMessage.fromUserId !== _id && readIcon}\n            {lastMessage.content.length > 16\n              ? lastMessage.content.substring(0, 16) + \"...\"\n              : lastMessage.content}\n          </div>\n        )}\n      </div>\n      <div className=\"recent-chats-time\">\n        {showDots ? <DropdownMenu /> : lastMessageString}\n      </div>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport SkeletonList from \"../common/skeletons/SkeletonList\";\nimport Contact from \"./Contact\";\nimport dayjs from \"dayjs\";\n\nfunction Contacts() {\n  const items = useSelector(({ application, contacts }) => {\n    const { contactSearchString } = application;\n    return contacts.items.filter(({ fullname }) => {\n      return (\n        fullname.toUpperCase().indexOf(contactSearchString.toUpperCase()) !== -1\n      );\n    });\n  });\n\n  const itemsSortedByTime = items.sort((a, b) => {\n    return dayjs(b.lastMessage?.time) - dayjs(a.lastMessage?.time);\n  });\n\n  const loading = useSelector((state) => state.contacts.loading);\n\n  return loading ? (\n    <SkeletonList />\n  ) : (\n    itemsSortedByTime.map((item) => <Contact key={item._id} {...item} />)\n  );\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport ContactSearch from \"./ContactSearch\";\nimport Contacts from \"./Contacts\";\n\nfunction Sidebar() {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-inner\">\n        <ContactSearch />\n        <Contacts />\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  messageSearchStringCleared,\n  messageSearchStringSet,\n} from \"../../redux/actions\";\n\nfunction MessageSearch() {\n  const dispatch = useDispatch();\n\n  const isMessageSearchStringOpened = useSelector(\n    (state) => state.application.isMessageSearchStringOpened\n  );\n  const searchString = useSelector(\n    (state) => state.application.messageSearchString\n  );\n\n  const handleChange = (event) => {\n    dispatch(messageSearchStringSet(event.target.value));\n  };\n\n  const handleClear = () => {\n    dispatch(messageSearchStringCleared());\n  };\n\n  return (\n    <div>\n      <input\n        value={searchString}\n        onChange={handleChange}\n        className={\n          isMessageSearchStringOpened\n            ? \"message-search-opened\"\n            : \"message-search-closed\"\n        }\n      />\n      {searchString === \"\" ? null : (\n        <button className=\"clear-button\" onClick={handleClear}>\n          <i className=\"material-icons\">clear</i>\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport default MessageSearch;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  messageSearchStringHandled,\n  settingsBarHandled,\n} from \"../../redux/actions\";\nimport MessageSearch from \"./MessageSearch\";\nimport OnlineIndicator from \"../common/OnlineIndicator\";\n\nfunction ChatHeader() {\n  const loading = useSelector((state) => state.chat.loading);\n\n  const opened = useParams().id;\n\n  const contactInfo = useSelector((state) =>\n    state.contacts.items.find((item) => item._id === opened)\n  );\n\n  const dispatch = useDispatch();\n\n  const handleShowSearchString = () => {\n    dispatch(messageSearchStringHandled());\n  };\n\n  const handleShowSettings = () => {\n    dispatch(settingsBarHandled());\n  };\n\n  useHotkeys(\"ctrl+p\", (event) => {\n    event.preventDefault();\n    handleShowSettings();\n  });\n\n  return (\n    <div className=\"chat-header\">\n      <div>\n        <button\n          onClick={handleShowSearchString}\n          className=\"message-search-button\"\n        >\n          <i className=\"material-icons\">search</i>\n        </button>\n        <MessageSearch />\n      </div>\n      <div>\n        {loading ? (\n          <div className=\"update\">\n            <i className=\"material-icons refresh\">autorenew</i> Updating...\n          </div>\n        ) : (\n          <div className=\"chat-header-name\">\n            {contactInfo.fullname}\n            {contactInfo.online && (\n              <OnlineIndicator customClass=\"online-indicator-header\" />\n            )}\n          </div>\n        )}\n      </div>\n      <div>\n        <button onClick={handleShowSettings}>\n          <i className=\"material-icons\">web</i>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatHeader;\n","import React from \"react\";\n\nfunction InfoMessage({ text }) {\n  return (\n    <div className=\"info-message\">\n      <div className=\"info-message-text\">{text}</div>\n    </div>\n  );\n}\n\nexport default InfoMessage;\n","import React, { useState } from \"react\";\nimport Dropdown from \"../common/dropdown/Dropdown\";\nimport DropdownItem from \"../common/dropdown/DropdownItem\";\nimport { messageDeleted } from \"../../redux/actions\";\nimport { useDispatch } from \"react-redux\";\n\nfunction MessageDropdown({ messageId }) {\n  const dispatch = useDispatch();\n  const [dropdown, setDropdown] = useState(false);\n\n  const handleClick = () => {\n    setDropdown(!dropdown);\n  };\n\n  const handleDelete = () => {\n    dispatch(messageDeleted(messageId));\n  };\n\n  return (\n    <div>\n      <button className=\"dropdown-arrow\" onClick={handleClick}>\n        <i className=\"material-icons\">keyboard_arrow_down</i>\n      </button>\n      <Dropdown open={dropdown} type=\"message\">\n        <DropdownItem action={handleDelete}>Delete</DropdownItem>\n      </Dropdown>\n    </div>\n  );\n}\n\nexport default MessageDropdown;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Avatar from \"../common/Avatar\";\nimport { settingsBarHandled } from \"../../redux/actions\";\nimport MessageDropdown from \"./MessageDropdown\";\nimport dayjs from \"dayjs\";\n\nfunction TextMessage({ isInbox, message }) {\n  const dispatch = useDispatch();\n\n  const opened = useParams().id;\n\n  const contactInfo = useSelector((state) =>\n    state.contacts.items.find((item) => item._id === opened)\n  );\n\n  const [showArrow, setShowArrow] = useState(false);\n\n  const handleMouseEnter = () => {\n    setShowArrow(true);\n  };\n\n  const handleMouseLeave = () => {\n    setShowArrow(false);\n  };\n\n  const type = isInbox ? \"inbox\" : \"outbox\";\n\n  const readIcon = message.read ? (\n    <i className=\"material-icons\">done_all</i>\n  ) : (\n    <i className=\"material-icons\">done</i>\n  );\n\n  const handleShowSettings = () => {\n    dispatch(settingsBarHandled());\n  };\n\n  return (\n    <div className={`${type}-message-outer`}>\n      {isInbox && (\n        <Avatar\n          label={contactInfo.fullname[0]}\n          size=\"small\"\n          onclick={handleShowSettings}\n        />\n      )}\n      <div\n        className={`${type}-message`}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <div className=\"message-text\">{message.content}</div>\n        <div className=\"message-time\">\n          {dayjs (message.time).format(\"HH:mm\")}\n          {!isInbox && !message.sending && readIcon}\n          {message.sending && <i className=\"material-icons\">schedule</i>}\n        </div>\n        {showArrow && (\n          <MessageDropdown messageId={message._id} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nTextMessage.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n\nTextMessage.defaultProps = {\n  type: \"outbox\",\n};\n\nexport default TextMessage;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport InfoMessage from \"./InfoMessage\";\nimport TextMessage from \"./TextMessage\";\n\nfunction Message({ message }) {\n  const myId = useSelector((state) => state.profile._id);\n\n  if (message.type === \"info\") {\n    return <InfoMessage text={message.content} key={message._id} />;\n  }\n\n  return <TextMessage message={message} isInbox={message.toUserId === myId} />;\n}\n\nexport default Message;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Message from \"./Message\";\n\nfunction Chat() {\n  const chat = useSelector((state) => {\n    const { messageSearchString } = state.application;\n    return state.chat.items.filter(\n      (item) =>\n        item.content\n          .toUpperCase()\n          .indexOf(messageSearchString.toUpperCase()) !== -1\n    );\n  });\n  const chatLoading = useSelector((state) => state.chat.loading);\n\n  if (chatLoading) {\n    return null\n  }\n\n  return (\n    <div className=\"chat\" id=\"chat-window\">\n      <div className=\"chat-inner\">\n        {chat.map((message) => (\n          <Message key={message._id} message={message} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Chat;\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n\nfunction MessageSendButtons({ isTyping, handleClick }) {\n  return (\n    <>\n      <button>\n        <i className=\"material-icons\">attach_file</i>\n      </button>\n      {isTyping ? (\n        <CSSTransition in={isTyping} timeout={500} classNames=\"send-button\">\n          <button onClick={handleClick}>\n            <i className=\"material-icons\">send</i>\n          </button>\n        </CSSTransition>\n      ) : (\n        <CSSTransition timeout={1000} classNames=\"mic-button\">\n          <button>\n            <i className=\"material-icons\">mic</i>\n          </button>\n        </CSSTransition>\n      )}\n    </>\n  );\n}\n\nexport default MessageSendButtons;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { messageSent } from \"../../redux/actions\";\nimport MessageSendButtons from \"./MessageSendButtons\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { useParams } from \"react-router-dom\";\n\nfunction MessageInput() {\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => state.chat.loading);\n\n  const myId = useSelector((state) => state.profile._id);\n  const opened = useParams().id;\n\n  const [message, setMessage] = useState(\"\");\n\n  const handleChange = (event) => {\n    const { value } = event.target;\n\n    const lastSymbol = value[value.length - 1];\n\n    if (lastSymbol !== \"\\n\") {\n      setMessage(event.target.value);\n    }\n  };\n\n  const sendMessage = () => {\n    if (message.length) {\n      dispatch(\n        messageSent({ myId, contactId: opened, type: \"text\", content: message })\n      );\n    }\n\n    setMessage(\"\");\n  };\n\n  const handleClick = () => {\n    sendMessage();\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.keyCode === 13) {\n      sendMessage();\n    }\n  };\n\n  useHotkeys(\"shift+enter\", (event) => {\n    event.stopPropagation();\n    setMessage(message + \"\\n\");\n  });\n\n  if (loading) {\n    return null\n  }\n\n  return (\n    <div className=\"message-input\">\n      <div className=\"message-textarea\">\n        <textarea\n          value={message}\n          placeholder=\"Write a message\"\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n        />\n      </div>\n      <div>\n        <MessageSendButtons\n          isTyping={message.length > 0}\n          handleClick={handleClick}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default MessageInput;\n","import React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ChatHeader from \"./ChatHeader\";\nimport Chat from \"./Chat\";\nimport MessageInput from \"./MessageInput\";\nimport InfoMessage from \"./InfoMessage\";\nimport { chatLoaded } from \"../../redux/actions\";\n\nfunction ChatWindow() {\n  const opened = useParams().id;\n  const dispatch = useDispatch();\n\n  const myId = useSelector((state) => state.profile._id);\n\n  useEffect(() => {\n    if (opened) {\n      dispatch(chatLoaded(myId, opened));\n    }\n  }, [dispatch, myId, opened]);\n\n  if (!opened) {\n    return <InfoMessage text=\"Please, select a chat to start messaging\" />;\n  }\n\n  return (\n    <div className=\"chat-window\">\n      <div className=\"chat-window-inner\">\n        <ChatHeader />\n        <Chat />\n        <MessageInput />\n      </div>\n    </div>\n  );\n}\n\nexport default ChatWindow;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Avatar from \"../common/Avatar\";\n\nfunction ContactInfo() {\n  const opened = useParams().id;\n\n  const contactInfo = useSelector((state) =>\n    state.contacts.items.find((item) => item._id === opened)\n  );\n\n  return (\n    <div className=\"contact-info\">\n      <Avatar label={contactInfo.fullname[0]} size=\"big\" />\n      <div>{contactInfo.fullname}</div>\n      <div className=\"username\">@{contactInfo.username}</div>\n      <div className=\"contact-info-icons\">\n        <button>\n          <i className=\"material-icons\">call</i>\n        </button>\n        <button>\n          <i className=\"material-icons\">videocam</i>\n        </button>\n        <button>\n          <i className=\"material-icons\">mail</i>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ContactInfo;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nfunction Social() {\n  const opened = useParams().id;\n\n  const contactInfo = useSelector((state) =>\n    state.contacts.items.find((item) => item._id === opened)\n  );\n\n  if (!contactInfo.hasOwnProperty(\"socials\")) {\n    return null;\n  }\n\n  return (\n    <div>\n      Social\n      <div className=\"social\">\n        {contactInfo.socials.instagram && (\n          <div className=\"social-item\">\n            <div className=\"social-icon\">\n              <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n            </div>\n            {contactInfo.socials.instagram}\n          </div>\n        )}\n        {contactInfo.socials.twitter && (\n          <div className=\"social-item\">\n            <div className=\"social-icon\">\n              <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n            </div>\n            {contactInfo.socials.twitter}\n          </div>\n        )}\n        {contactInfo.socials.facebook && (\n          <div className=\"social-item\">\n            <div className=\"social-icon\">\n              <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n            </div>\n            {contactInfo.socials.facebook}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Social;\n","import React from \"react\";\n\nfunction Media() {\n  return (\n    <div>\n      Media\n      <div className=\"media\">\n        <div className=\"media-avatar\" />\n        desktop-chat.pdf\n      </div>\n    </div>\n  );\n}\n\nexport default Media;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport ContactInfo from \"./ContactInfo\";\nimport Social from \"./Social\";\nimport Media from \"./Media\";\n\nfunction ProfileBar() {\n  const opened = useParams().id;\n\n  if (opened === undefined) {\n    return null;\n  }\n\n  return (\n    <div className=\"settings-bar\">\n      <div className=\"settings-bar-inner\">\n        <ContactInfo />\n        <Social />\n        <Media />\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileBar;\n","import React from \"react\";\nimport logo from \"./iconmonstr-github-1.svg\";\n\nfunction GitHub() {\n  return (\n    <a href=\"https://github.com/Edilbiev/react-desktop-chat\">\n      <div className=\"github-outer\">\n        <img src={logo} alt=\"github\" className=\"github\" />\n      </div>\n    </a>\n  );\n}\n\nexport default GitHub;\n","import React, { useEffect } from \"react\";\nimport Sidebar from \"./sidebar/Sidebar\";\nimport ChatWindow from \"./chat/ChatWindow\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { contactsLoaded, profileLoaded } from \"../redux/actions\";\nimport ProfileBar from \"./profile/ProfileBar\";\nimport {CSSTransition} from \"react-transition-group\";\nimport GitHub from \"./common/GitHub/GitHub\";\nimport dayjs from \"dayjs\";\nimport updateLocale from \"dayjs/plugin/updateLocale\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const loading = useSelector((state) => state.profile.loading);\n  const loading2 = useSelector((state) => state.contacts.loading);\n  const settingsBarOpened = useSelector(\n    (state) => state.application.settingsBarOpened\n  );\n\n  dayjs.extend(updateLocale);\n  dayjs.updateLocale(\"en\", {\n    weekdays: [\n      \"Воскресенье\",\n      \"Понедельник\",\n      \"Вторник\",\n      \"Среда\",\n      \"Четверг\",\n      \"Пятница\",\n      \"Суббота\",\n    ],\n  });\n\n\n  useEffect(() => {\n    dispatch(contactsLoaded());\n    dispatch(profileLoaded());\n  }, [dispatch]);\n\n  if (loading || loading2) {\n    return null;\n  }\n\n  return (\n    <div className=\"app\">\n      <Sidebar />\n      <ChatWindow />\n      <CSSTransition\n        in={settingsBarOpened}\n        timeout={300}\n        classNames=\"transition\"\n        unmountOnExit\n      >\n        <ProfileBar />\n      </CSSTransition>\n      <GitHub />\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n  loading: true,\n  items: [],\n};\n\nexport default function Contacts(state = initialState, action) {\n  switch (action.type) {\n    case \"contacts/load/started\":\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case \"contacts/load/success\":\n      return {\n        ...state,\n        items: action.payload,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  loading: false,\n  items: [],\n  nextTempId: 1,\n  deleting: false,\n};\n\nexport default function chat(state = initialState, action) {\n  switch (action.type) {\n    case \"chat/load/started\":\n      return {\n        ...state,\n        items: [],\n        loading: true,\n      };\n\n    case \"chat/load/success\":\n      return {\n        ...state,\n        items: action.payload,\n        loading: false,\n      };\n\n    case \"message/send/started\":\n      return {\n        ...state,\n        nextTempId: state.nextTempId + 1,\n        items: [\n          ...state.items,\n          {\n            ...action.payload,\n            sending: true,\n          },\n        ],\n      };\n\n    case \"message/send/succeed\":\n      const { nextTempId } = action.payload;\n\n      return {\n        ...state,\n        items: state.items.map((item) => {\n          if (item.nextTempId === nextTempId) {\n            return action.payload;\n          }\n\n          return item;\n        }),\n      };\n\n    case \"message/delete/started\":\n      return {\n        ...state,\n        deleting: true,\n      };\n\n    case \"message/delete/succeed\":\n      return {\n        ...state,\n        deleting: false,\n        items: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  loading: false,\n  _id: null,\n};\n\nexport default function profile(state = initialState, action) {\n  switch (action.type) {\n    case \"profile/load/started\":\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case \"profile/load/succeed\":\n      return {\n        ...state,\n        _id: action.payload._id,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","const initialState = {\n  contactSearchString: \"\",\n  settingsBarOpened: false,\n  isMessageSearchStringOpened: false,\n  messageSearchString: \"\",\n};\n\nexport default function application(state = initialState, action) {\n  const { payload, type } = action;\n  switch (type) {\n    case \"contacts/search/set\":\n      return {\n        ...state,\n        contactSearchString: payload,\n      };\n\n    case \"settings/bar/handled\":\n      return {\n        ...state,\n        settingsBarOpened: !state.settingsBarOpened,\n      };\n\n    case \"message/search/handled\":\n      return {\n        ...state,\n        messageSearchString: \"\",\n        isMessageSearchStringOpened: !state.isMessageSearchStringOpened,\n      };\n\n    case \"message/search/closed\":\n      return {\n        ...state,\n        messageSearchString: \"\",\n        isMessageSearchStringOpened: false,\n      };\n\n    case \"message/search/cleared\":\n      return {\n        ...state,\n        messageSearchString: \"\",\n      };\n\n    case \"message/search/set\":\n      return {\n        ...state,\n        messageSearchString: payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport logger from \"redux-logger\";\nimport contacts from \"./reducers/contacts\";\nimport chat from \"./reducers/chat\";\nimport profile from \"./reducers/profile\";\nimport application from \"./reducers/application\";\n\nconst reducer = combineReducers({ contacts, chat, profile, application });\n\nexport const store = createStore(reducer, applyMiddleware(thunk, logger));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"normalize.css\";\nimport \"./styles.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <Route path=\"/:id?\">\n          <App />\n        </Route>\n      </BrowserRouter>\n    </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}